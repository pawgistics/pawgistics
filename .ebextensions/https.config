Resources:
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

files:
  /etc/nginx/conf.d/000_http_redirect.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
        listen 8080;
        location / {
          return 301 https://$host$request_uri;
        }
        location /.well-known/acme-challenge/  {
          try_files $uri =404;
          root /var/www/;
        }
      }
  /etc/nginx/conf.d/https.pre:
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
        listen       443 default ssl;
        error_page  497 https://$host$request_uri;

        ssl_certificate      /etc/letsencrypt/live/ebcert/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/ebcert/privkey.pem;

        ssl_session_timeout  5m;
        ssl_protocols TLSv1.2;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_prefer_server_ciphers   on;

        location / {
            proxy_pass  http://nodejs;
            proxy_set_header   Connection "";
            proxy_http_version 1.1;
            proxy_set_header        Host            $host;
            proxy_set_header        X-Real-IP       $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        Upgrade         $http_upgrade;
            proxy_set_header        Connection      "upgrade";
        }

        location /static/ {
            alias /var/app/current/dist/;
        }
      }

container_commands:
  10_installcertbot:
    command: "sudo wget https://dl.eff.org/certbot-auto;chmod a+x certbot-auto"
  20_getcert:
    command: "sudo ./certbot-auto certonly --non-interactive --email ${admin_email} --agree-tos --standalone --domains ${cert_domain} --keep-until-expiring --debug"
  30_link:
    command: "sudo ln -sf /etc/letsencrypt/live/${cert_domain} /etc/letsencrypt/live/ebcert"
  40_config:
    command: "sudo mv /etc/nginx/conf.d/https.pre /etc/nginx/conf.d/https.conf"