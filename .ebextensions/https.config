Resources:
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/enact/45remove_default_config.sh":
    mode: "000755"
    owner: root
    group: users
    content: |
      #!/usr/bin/env bash
      sudo rm -rf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf

  "/opt/elasticbeanstalk/hooks/configdeploy/enact/45remove_default_config.sh":
    mode: "000755"
    owner: root
    group: users
    content: |
      #!/usr/bin/env bash
      sudo rm -rf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf

  "/etc/nginx/conf.d/http_redirect.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
        listen 8080;
        location / {
          return 301 https://$host$request_uri;
        }
        location /.well-known/acme-challenge/ {
          try_files $uri =404;
          root /var/www/;
        }
      }

  "/etc/nginx/conf.d/elastic_beanstalk_proxy_https.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      upstream nodejs {
        server 127.0.0.1:8081;
        keepalive 256;
      }
      map $sent_http_content_type $expires {
          default                    off;
          text/css                   max;
          application/javascript     max;
          ~image/                    max;
      }
      server {
        listen 443 default ssl http2;
        error_page 497 https://$host$request_uri;

        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
            set $year $1;
            set $month $2;
            set $day $3;
            set $hour $4;
        }
        access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
        access_log /var/log/nginx/access.log main;

        ssl_certificate /etc/letsencrypt/live/ebcert/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ebcert/privkey.pem;

        ssl_session_timeout 5m;
        ssl_protocols TLSv1.2;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_prefer_server_ciphers on;
        
        expires $expires;

        root /var/app/current/;

        location /api/ {
            proxy_pass http://nodejs;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /static/ {
            alias /var/app/current/dist/;
            location ~ (\.gz$|\.br$) {
                try_files _ @index;
            }
            try_files $uri @index;
        }

        location / {
            try_files _ @index;
        }

        location @index {
            try_files /dist/index.html =500;
        }
      }

container_commands:
  10_installcertbot:
    command: "sudo wget https://dl.eff.org/certbot-auto;chmod a+x certbot-auto"
  20_getcert:
    command: "sudo ./certbot-auto certonly --non-interactive --email ${admin_email} --agree-tos --standalone --domains ${cert_domain} --keep-until-expiring --debug --http-01-port 8080"
  30_link:
    command: "sudo ln -sf /etc/letsencrypt/live/${cert_domain} /etc/letsencrypt/live/ebcert"
